if { $::sg_use_cdc_abstract_view == 0 }  {
  abstract_file -version 5.1.0 -scope cdc 

  current_design "ringpll" -def_param

########### CLOCKS ###################################################
clock -name "tck"             -domain TAPCLK -tag TAPCLK
clock -name "idvtclki"        -domain TAPCLK -tag TAPCLK
clock -name "clkref"          -domain REFCLK  -tag REFCLK
clock -name "idvfreqai"       -domain IDV -tag IDV
clock -name "idvfreqbi"       -domain IDV -tag IDV

current_design ip2211ringpll_pllljtopana
clock -name clkpll -domain CLK_OUT -tag CLK_OUT

#current_design ip2211ringpll_ip2211cpafdivcore
#clock -name clkout -domain CLK_OUT -tag CLK_OUT

current_design "ringpll" -def_param

############ Reset signal in the design ###############################
reset -name trst_n -async -value 0
reset -name idvtresi -async -value 1
reset -name pllen -async -value 0

#reset -name ringpll.iip2211ringpll_hip.reset_b_dly  -async -value 0
#reset -name powergood_vnn -async -value 0

#defined below abstract ports explicitly to meet soc needs. HSD - 22013991426
abstract_port -ports "pllen"       -clock "VCLK_pllen"    -combo no
abstract_port -ports "trst_n"       -clock "VCLK_trst_n"  -combo yes

########## Interface signal ###########################################
#INPUT PORTS
abstract_port -ports "ldo_enable"      -clock "VCLK_ldo_en" -combo no
#check if -combo yes is ok
#abstract_port -ports "ldo_enable"      -clock "VCLK_ldo_en" -combo yes
abstract_port -ports "tcapturedr"      -clock "tck"
abstract_port -ports "tshiftdr"        -clock "tck"
abstract_port -ports "tupdatedr"       -clock "tck"
abstract_port -ports "treg_en"         -clock "tck"
abstract_port -ports "tdi"             -clock "tck"

abstract_port -ports "idvtdi"          -clock "idvtclki"
abstract_port -ports "idvtctrli"       -clock "idvtclki"
abstract_port -ports "idvpulsei"       -clock "idvtclki"

###############################################################################################################
#Analysing the lock case by propogating vco clock through glitchless mux by setting bypass=0
set_case_analysis -name ringpll.iip2211ringpll_hip.ip2211ringpll_pll_glitchlessmux.bypass -value 0
#Removing the below set_case_value and placed a quasi_static constraint on all fuse signals elsewhere in this constraint file
#set_case_analysis -name ringpll.fz_tight_loopb -value 0 
# Post FEV, bypass is not control signal anymore. There is an internal signal which supercedes the bypass
set_case_analysis -name ringpll.iip2211ringpll_hip.ip2211ringpll_pll_glitchlessmux.bypassb_shwe -value 0

#tclk and refclk converge at View mux. To resolve this setting the viewsel 
set_case_analysis -name ringpll.iip2211ringpll_hip.ip2211ringpll_view_mux.viewsel0[4:0] -value {00000}
set_case_analysis -name ringpll.iip2211ringpll_hip.ip2211ringpll_view_mux.viewsel1[4:0] -value {00000}

#Analyzing ssc disabled mode
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.dfx__SscDfxEnNH -value 0

#choosing dfx mode for adc_start since the dfx_mode defualt value is 0. In fscan mode the default value is in 1 & will hit reset_check12 error for adc_en signal 
set_case_analysis -name ringpll.idfx_fscan_rstbypen -value 0

#choosing functional rest path since tap override default value of 0 causes reset_check12 error 
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.tap_in[ovrd_enable_sel] -value 0

#fz_spare[3]/tll_en is sampled by refclk and vco clk domain.Hence tool throws clock_syn05a error. By setting this bit to zero both ip2211ringpll_tlctrl_sip.ClockEnXXnnnL and vcozdiv0.fdiv_core.CountMH[0] will see same clock domain
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.dfx__tllm_en -value 0

#disabling vco openloop mode
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.tap_in[ta_openloop2] -value 0

#Will ensure active value of reset gets propogated to LockCntValXXnnnH
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.tap_in[openloop] -value 0

#choosing functional path for ratio setting to resolve clock convergence issue at "ratio2x[0] & ~HiPhaseMH "
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.dfx__fuseoverride -value 0

#To resolve multiple clock domain sampling issue on mash_order_plus_one
#set_case_analysis -name ringpll.mash_order_plus_one -value 1
#Changing case value from 1 to 0 to meet soc needs - below port is required for SSC purpose and when SSC feature is disabled, it makes more sense to have case value 0
set_case_analysis -name ringpll.mash_order_plus_one -value 0 

#to resolve clock convergence issue at ClkIdvIntIH
set_case_analysis -name ringpll.idvdisable_bi -value 0

#choosing non-bypass path
#removed during SR - : this constraint causes design_read issues
#set_case_analysis -name ringpll.iip2211ringpll_hip.refclkbypass -value 0

set_case_analysis -name ringpll.iip2211ringpll_hip.view_adc.hvmadc.ADCClkDivX1nnnH[1:0] -value {00}




#setting tap status bit as quasi_static
quasi_static -name ringpll.iip2211ringpll_sip.sip.tap_out


#Disabling ssc mode for analysis
#set_case_analysis -name  ringpll.iip2211ringpll_sip.sip.dfx.ssc_en -value 0
#Promoting the case value to top level port instead of internal pin to suit customer needs. HSD - 22013987878
set_case_analysis -name  ringpll.ssc_en -value 0

#set all CR and fuse values as static signals
quasi_static -name ringpll.mdiv_ratio
quasi_static -name ringpll.ssc_frac_step[23:0]
quasi_static -name ringpll.ssc_cyc_to_peak_m1[8:0]

#ssc block operating in gated fbclk consumes LockXXnnL generated in refclk as reset.
#temp fix
quasi_static -name ringpll.iip2211ringpll_sip.sip.ip2211ringpll_lock_detector.LockXXnnnL
#reset_filter_path -from_rst ringpll.iip2211ringpll_sip.sip.ip2211ringpll_lock_detector.PllLockXXnnnL -clock ringpll.iip2211ringpll_hip.pll_core.clkpll -type reset_sync02
quasi_static -name ringpll.fraction
quasi_static -name ringpll.iip2211ringpll_sip.sip.ssc__FractionMXH
quasi_static -name ringpll.ratio

abstract_port -ports sdout -module ip2211ringpll_tsadcsdmod10ana -clock clkref

#disabling adc block
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.dfx__adc_start -value 0

#passing fuse values for ratio, fraction and powergood compared to tap setting
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.tap_in[ovrd_frac_sel] -value 0
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.tap_in[ovrd_ratio_sel] -value 0
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.tap_in[ovrd_powergood_sel] -value 0

##ignoring trst_n which gets propogated through rtdr output to all the endpoints 
reset_filter_path -from_rst ringpll.trst_n -clock ringpll.iip2211ringpll_hip.pll_core.clkpll -type rdc

## added during SR - 
reset_filter_path -from_rst ringpll.trst_n -clock ringpll.iip2211ringpll_hip.pll_core.clkref -type rdc

## added during SR -  putting this constraint as the trim_fsm portion is used only for trimming 
reset_filter_path -from_rst ringpll.iip2211ringpll_sip.sip.ip2211ringpll_vctl_trim_fsm.ForceDoneSetFlopXXH -clock ringpll.iip2211ringpll_hip.pll_core.clkref -type rdc


#Disabling digview mode
set_case_analysis -name ringpll.iip2211ringpll_sip.dfx_viewdigennnnnh -value 0

##Ignoring the reset crossing to tap/rtdr status bits 
reset_filter_path  -from_rst ringpll.pllen -clock ringpll.tck -type rdc

##Ignoring reset crossing to pll_inst_align block used for modelling pfd behavior
reset_filter_path -from_rst ringpll.pllen  -clock ringpll.iip2211ringpll_hip.pll_core.clkpll -type rdc

#Ignoring pfden/reset crossing to pll_inst_align block
reset_filter_path -from_rst ringpll.iip2211ringpll_sip.sip.ip2211ringpll_startup_gen.pfden_2 -clock ringpll.iip2211ringpll_hip.pll_core.clkpll -type reset_sync02

reset -name ringpll.iip2211ringpll_sip.sip.ip2211ringpll_vctl_trim_fsm.ForceDoneSetFlopXXH -async -value 1
#ForceSwStateLowMH latch uses HiPhaseMH as reset signal
#reset -name ringpll.iip2211ringpll_hip.refclkdiv.fdiv_core.HiPhaseMH -async -value 1
#reset -name ringpll.iip2211ringpll_hip.vcozdiv0.fdiv_core.HiPhaseMH -async -value 1
#reset -name ringpll.iip2211ringpll_hip.vcozdiv1.fdiv_core.HiPhaseMH -async -value 1

#To propogate reset property through reset_sync path
set_case_analysis -name ringpll.iip2211ringpll_sip.sip.dfx.dfx__bypass -value 0

#setting constraints on the CR/Fuse interface signals for which tool  	
quasi_static -name ringpll.zdiv0_ratio_p5
quasi_static -name ringpll.zdiv1_ratio_p5

#to stop the REFCLK property on the dig level shifter output which is anded with reset signal(REFCLK domain)
clock_sense -pins ringpll.iip2211ringpll_hip.ipll_dig_lsbank.reset_b_xxl  -tag REFCLK
#added during SR - 
clock_sense -pins ringpll.iip2211ringpll_hip.ipll_dist_lsbank.reset_b_xxl -tag REFCLK
#clock_sense -pins ringpll.iip2211ringpll_hip.clkrefmux -tag REFCLK
#reset_sense -pins ringpll.iip2211ringpll_hip.ipll_dig_lsbank.clkfbmxh  
reset_sense -pins  ringpll.iip2211ringpll_hip.vcozdiv0.fdiv_core.clkout
reset_sense -pins  ringpll.iip2211ringpll_hip.vcozdiv1.fdiv_core.clkout


##Ignoring reset crossing to synchronizer in respective domains. HSD - 22013991426
reset_filter_path -from_clock VCLK_pllen  -to_clock ringpll.clkref -type reset_sync02
reset_filter_path -from_rst ringpll.pllen  -clock ringpll.clkref -type reset_sync02
reset_filter_path -from_clock VCLK_trst_n -to_clock tck -type reset_sync02


##Ignoring reset crossing to synchronizer in clkpll domain
reset_filter_path -from_rst ringpll.pllen  -clock ringpll.iip2211ringpll_hip.pll_core.clkpll -type reset_sync02


## added during SR -  : Crossing between func and DFX clocks
set_case_analysis -name "iip2211ringpll_sip.sip.dfx__start_measurement" -value 0

## added during SR -  : The signal, once asserted doesn't change throughout the life cycle of this IP and toggles only when the IP is reset once again
quasi_static -name ringpll.startup_gen__PfdEnXXH

## Confirmed that these signals are mutually exclusive . HSD - 16015060179

cdc_attribute -exclusive ringpll.pllen ringpll.ldo_enable


#defined below ports fuse as quasi-static explicitly to meet soc needs. HSD  - 22013991426
quasi_static -name "ringpll.fz_*"
}




