# -*-perl-*-

my $PROJECT = "{.$DutConfig{scope}.}";

%audf = (

    HDLSpec => {
        $PROJECT => {
            libs => { 
                ctech_lib => {
                     -hdl_spec => [
                          "$ENV{CTECH_ROOT}/source/v/CTECH_v_rtl_lib.hdl",
                         ],

                },
   
                 stdcell_rtl_lib => {
                 -hdl_spec => [
                   "$ENV{CTECH_ROOT}/source/p1222/b15/ln/CTECH_CDC_p1222_b15_ln_rtl_lib.hdl",
                ],
		 -vlog_opts => ['+define+INTEL_NO_PWR_PINS+NO_PWR_PINS+functional+no_unit_delay'],

                },

                ## reusable design library
                {.$DutConfig{scope}.}_rtl_lib => {
                    -hdl_spec       => [ 'cfg/{.$DutConfig{target}.}/HDL/{.$DutConfig{scope}.}_rtl.hdl' ],
                    -dependent_libs => [ ],
                    -vlog_opts      => [ '\<vcs\>-timescale=1ps/1ps',
                        ],
                }, 
 

                ## reusable test island
                {.$DutConfig{scope}.}_ti_lib => {
                    -tag            => 'nonsynth+nonemu+nonfpga',
                    -hdl_spec       => [ "cfg/{.$DutConfig{target}.}/HDL/{.$DutConfig{scope}.}_ti.hdl" ], 
                    -dependent_libs => [ 'sip_shared_lib', 
                                       ],
                    -vlog_opts      => [ '\<vcs\>-timescale=1ps/1ps',
                                       ],
                },
                     
                ## non-reusable testbench
                {.$DutConfig{scope}.}_tb_lib => {
                    -tag            => 'nonsynth+nonemu+nonfpga',
                    -hdl_spec       => [ "cfg/{.$DutConfig{target}.}/HDL/{.$DutConfig{scope}.}_tb.hdl" ],
                    -dependent_libs => [ 'sip_shared_lib', 
                                       ],
                    -vlog_opts      => [ '\<vcs\>-timescale=1ps/1ps',
                                       ],
                },
               
                ## emulation testbench
                {.$DutConfig{scope}.}_emu_tb_lib => {
                    #-tag            => 'nonsynth+nonemu+nonfpga',
                    -hdl_spec       => [ "cfg/{.$DutConfig{target}.}/HDL/{.$DutConfig{scope}.}_emu_tb.hdl" ],
                    -dependent_libs => [ 'sip_shared_lib', 
                                       ],
                    -vlog_opts      => [ '\<vcs\>-timescale=1ps/1ps',
                                       ],
                },

                ## non-reusable sip_shared_lib
                ## Whenever possible, use dependent_libs instead of sub_libs in sip_shared_lib. 
                ## This enables VIP compile to be parallel instead of serial
                ## and speeds incremental compilation of validation IP content 
                sip_shared_lib => {
                    -tag            => 'nonsynth+nonemu+nonfpga',
                    -dependent_libs => [ #'uvm_ti_lib'
                                       ],
                    -vlog_files     => [ ],
                    -vlog_opts      => [ '-sverilog'],
                },
            }, # end libs
            models => {
                {.$DutConfig{model}.} => {

                    top    => '{.$DutConfig{modelTop}.}',
                    libs   => (($ENV{SPYGLASS_CDC} eq 1)?[  'TPRbits_pkg_lib', '{.$DutConfig{scope}.}_tb_lib', '{.$DutConfig{scope}.}_ti_lib', '{.$DutConfig{scope}.}_rtl_lib', 'sip_shared_lib', 'stdcell_rtl_lib', ] : [ 'TPRbits_pkg_lib', '{.$DutConfig{scope}.}_tb_lib', '{.$DutConfig{scope}.}_ti_lib', '{.$DutConfig{scope}.}_rtl_lib', 'sip_shared_lib', 'ctech_lib']),
                    use    => [ #'UVM:uvm',
                                 'CTECH:CTECH_model',
                              ],
                    pli_libs => [ '-hier_rtl_dumper', '-debussy_pli_libs', '-proto_pli_libs' ],                   
		    jg_elab_top => '{.$DutConfig{modelTop}.}',
		    power_intent => {
		       power_top => '{.$DutConfig{scope}.}',
		       upf_files => [ 'tools/upf/{.$DutConfig{scope}.}.upf' ],
		    },
                    export => {
                        libs => [ '{.$DutConfig{scope}.}_rtl_lib' , '{.$DutConfig{scope}.}_ti_lib'],
                       
                        pli_libs => [ ], ## export only plis that your scope created, not global plis
                        testcase_globals => { 
                        },
                    }, # end export
                  elab_opts => ['-lca -full64 -timescale=1ns/100ps -debug_access+all'], 
                }, # end {.$DutConfig{scope}.} model 
            # end models

                {.$DutConfig{scope}.}_emu  => {

                    top    => 'ringpll_emu_tb_lib.ringpll_emu_tb',
                    libs   => [ '{.$DutConfig{scope}.}_emu_tb_lib', '{.$DutConfig{scope}.}_ti_lib', '{.$DutConfig{scope}.}_rtl_lib', 'sip_shared_lib'],
                    use    => [ #'UVM:uvm',
                                 'CTECH:CTECH_model',
                              ],
                    pli_libs => [ '-hier_rtl_dumper', '-debussy_pli_libs', '-proto_pli_libs' ],                   
	            jg_elab_top => 'ringpll_emu_tb_lib.ringpll_emu_tb',
	            power_intent => {
                       enable_pwr_intent => 1,
	               #power_top => '{.$DutConfig{scope}.}',
	               power_top => 'ringpll_emu_tb.dut',
	               upf_files => [ 'tools/upf/{.$DutConfig{scope}.}.upf' ],
	            },
                    export => {
                        libs => [ '{.$DutConfig{scope}.}_rtl_lib' , '{.$DutConfig{scope}.}_ti_lib'],
                       
                        pli_libs => [ ], ## export only plis that your scope created, not global plis
                        testcase_globals => { 
                        },
                    }, # end export
                  elab_opts => ['-lca -full64 -timescale=1ns/100ps -debug_access+all'], 
                }, # end {.$DutConfig{scope}.} model 
},#end models        
}, # end scope
    }, # end HDLSpec
);
