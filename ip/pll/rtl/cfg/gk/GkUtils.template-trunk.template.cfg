# Intel Confidential                                                        
# Copyright 2021 Intel Corporation.                                         
# The information contained herein is the proprietary and confidential      
# information of Intel or its licensors, and is supplied subject to, and    
# may be used only in accordance with, previously executed agreements       
# with Intel ,                                                                                                   
# EXCEPT AS MAY OTHERWISE BE AGREED IN WRITING:                            
# (1) ALL MATERIALS FURNISHED BY INTEL HEREUNDER ARE PROVIDED "AS IS"      
#      WITHOUT WARRANTY OF ANY KIND;                            
# (2) INTEL SPECIFICALLY DISCLAIMS ANY WARRANTY OF NONINFRINGEMENT, FITNESS 
#      FOR A PARTICULAR PURPOSE OR MERCHANTABILITY; AND                     
# (3) INTEL WILL NOT BE LIABLE FOR ANY COSTS OF PROCUREMENT OF SUBSTITUTES, 
#      LOSS OF PROFITS, INTERRUPTION OF BUSINESS, OR                       
#      FOR ANY OTHER SPECIAL, CONSEQUENTIAL OR INCIDENTAL DAMAGES,        
#      HOWEVER CAUSED, WHETHER FOR BREACH OF WARRANTY, CONTRACT,            
#      TORT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE. 

## Do for common file.
if(defined($ENV{GK_PROJECT_CONFIG_DIR})) {
    do "$ENV{'GK_PROJECT_CONFIG_DIR'}/GkUtils.hdk.common.cfg";
} elsif(defined($ENV{GK_CONFIG_DIR})) {
    do "$ENV{'GK_CONFIG_DIR'}/GkUtils.hdk.common.cfg";
}

my $machine_arch = 'SLES11';

undef $Models{job_pre_exec};

$Models{general_cmds} = [ 
    ########################################
    ## PREPARATION & CODE GENERATION
    ########################################
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_creation',
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s create_files",
    },

    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_codegen',
        'DEPENDENCY' => { '<DUT>_creation' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s codegen -s .collage_build_lint -s create_files",
    },
    #{
    #    'DUTS'       => 'default',
    #    'NAME'       => '<DUT>_uniquifyme_checker_mode',
    #    'DEPENDENCY' => { '<DUT>_codegen' => 'Success', },
    #    "CMDS"       => "<MODEL_ROOT>/tools/uniquification/uniquifyme <MODEL_ROOT> template -checker_mode",
    #    'GATING'     => 1,
    #},
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_fuse',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s fuse",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_collage_lint',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s .collage_build_lint",
        'GATING'     => 0, ## if the IP has no std interfaces, this is guaranteed to fail
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_visa_validate',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s visa_validate",
        'GATING'     => 0,
    },
    ########################################
    ## COMPILATIONS
    ########################################
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_ace_lint_precheck',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s ace_lint_precheck",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_sim',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Complete', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_sim",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_sim_mpp',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_sim_mpp",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_lintra',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success',},
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_lint -s spyglass_build",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_lintra_svtb',
        'DEPENDENCY' => { '<DUT>_compile_lintra' => 'Success',},
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s lintra_svtb_build",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_spyglass',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success',},
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s spyglass_build",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },

    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_cdc',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s cdc +s ccoz -s cdc_run_tests -s cdc_run_orig_tests -s check_rptclk_status",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },

    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_cdc_tests',
        'DEPENDENCY' => { '<DUT>_compile_cdc' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s cdc_run_tests +s check_cdc_status +s check_rptclk_status +s .hdmrun ", #OR +s .cfmrun
        'NBFLOW'       => 1,
        'NBFLOW_SUBTASK_PREFIX'   => 'static_check_cdc',
        'ABBREV_REPORT' => 1,
        'USE_ALT_FLOWBEE' => 1,
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_fpv',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_fpv",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },

    #{
    #    'DUTS'       => 'default',
    #    'NAME'       => '<DUT>_compile_emu',
    #    'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
    #    'CMD_TYPE'   => 'simbuild',
    #    "CMDS"       => "-s all +s compile_emu",
    #    'NBCLASS'    => "${machine_arch}&&32G",
    #},

    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_emu_mpp',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_emu_mpp",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_emu_vcs',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_emu -s emu_build",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_emu_zebu',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_emu -s vcs_emu_build -emu_build_args -postargs '-check_zebu' -emu_build_args-",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_emu_veloce',
        'DEPENDENCY' => { '<DUT>_compile_emu_zebu' => 'Complete'},
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_emu -s vcs_emu_build -emu_build_args -postargs '-check_veloce' -emu_build_args-",
        #'NBCLASS'    => "${machine_arch}&&32G",
        'GATING'     => 0,
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_emu_fpga',
        'DEPENDENCY' => { '<DUT>_compile_emu_veloce' => 'Complete'},
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_emu -s vcs_emu_build -emu_build_args -postargs '-check_fpga' -emu_build_args-",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_compile_fpga',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', '<DUT>_ace_lint_precheck' => 'Success', },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s compile_fpga",
        #'NBCLASS'    => "${machine_arch}&&32G",
        'GATING'     => 0,
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_audit',
        'DEPENDENCY' => { '<DUT>_codegen' => 'Success', 
                          '<DUT>_compile_sim' => 'Success', 
                          '<DUT>_BasicSim_regression' => 'Complete',
                          '<DUT>_cdc_regression' => 'Complete',
                          '<DUT>_lintra_regression' => 'Complete', 
                          '<DUT>_spyglass_regression' => 'Complete', 
                          '<DUT>_top_hier_gen' => 'Complete'  },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s audit -s ace_lint",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_ace_lint',
        'DEPENDENCY' => { '<DUT>_compile_sim' => 'Success', 
                          '<DUT>_BasicSim_regression' => 'Success', 
                          '<DUT>_top_hier_gen' => 'Complete' },
        'CMD_TYPE'   => 'simbuild',
        "CMDS"       => "-s all +s ace_lint",
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_febe_global',
        'DEPENDENCY' => { '<DUT>_top_hier_gen' => 'Success'},
        'CMD_TYPE'   => 'febe',
        "CMDS"       => "-s unit",
        'NBFLOW'       => 1,
        'NBFLOW_SUBTASK_PREFIX'   => 'febe_global',
        'ABBREV_REPORT' => 1,
        'USE_ALT_FLOWBEE' => 1,
        #'NBCLASS'    => "${machine_arch}&&32G",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_febe_unit_collateral',
        'DEPENDENCY' => { '<DUT>_febe_global' => 'Success'},
        'CMD_TYPE'   => 'febe',
        "CMDS"       => "-s all +s gen_collateral +s hip_list +s lintra_elab -s fc -s partition",
        'NBFLOW'       => 1,
        'NBFLOW_SUBTASK_PREFIX'   => 'febe_unit_collateral',
        'ABBREV_REPORT' => 1,
        'USE_ALT_FLOWBEE' => 1,
        #'NBCLASS'    => "${machine_arch}&&32G",
        'GATING'     => 0,
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_febe_unit_run',
        'DEPENDENCY' => { '<DUT>_febe_unit_collateral' => 'Success'},
        'CMD_TYPE'   => 'febe',
        "CMDS"       => "-s all +s .unit -s gen_collateral -s hip_list -s lintra_elab",
        'NBFLOW'       => 1,
        'NBFLOW_SUBTASK_PREFIX'   => 'febe_unit_run',
        'ABBREV_REPORT' => 1,
        'USE_ALT_FLOWBEE' => 1,
        #'NBCLASS'    => "${machine_arch}&&32G",
        'GATING'     => 0,
    },

    ########################################
    ## Power Artist (Pacific flow)
    ########################################
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_pacific',
        'DEPENDENCY' => { '<DUT>_febe_unit_collateral' => 'Success','<DUT>_MppSim_regression' => 'Success',},
        'CMDS'       => 'pacific -cnt soc -cell template_top -project hdk -model_root <MODEL_ROOT> -cfg_dir <MODEL_ROOT>/tools/pacific -activities <MODEL_ROOT>/regression/<DUT>/level0_template_tests_vcs_mpp.list/template_top_vcs_mpp/power_window.log -out_dir <MODEL_ROOT>/target/<DUT>/results/pacific',
        'GATING'     => 0,
    },
    
    ########################################
    ## REGRESSIONS
    ########################################
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_top_hier_gen',
        'DEPENDENCY' => { '<DUT>_compile_sim' => 'Success',  '<DUT>_compile_sim_mpp' => 'Success', },
        'CMD_TYPE'   => 'simregress',
        "CMDS"       => "<MODEL_ROOT>/reglist/template/top_hier_gen_template_tests_vcs_dump.list $triage_args",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_BasicSim_regression',
        'DEPENDENCY' => { '<DUT>_compile_sim' => 'Success', },
        'CMD_TYPE'   => 'simregress',
        "CMDS"       => "<MODEL_ROOT>/reglist/template/level0_template_tests_vcs.list $triage_args",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_MppSim_regression',
        'DEPENDENCY' => { '<DUT>_compile_sim_mpp' => 'Success', },
        'CMD_TYPE'   => 'simregress',
        "CMDS"       => "<MODEL_ROOT>/reglist/template/level0_template_tests_vcs_mpp.list $triage_args",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_cdc_regression',
        'DEPENDENCY' => { '<DUT>_compile_cdc' => 'Success', '<DUT>_cdc_tests' => 'Complete',},
        'CMD_TYPE'   => 'simregress',
        "CMDS"       => "<MODEL_ROOT>/reglist/template/level0_template_tests_cdc.list $triage_args",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_lintra_regression',
        'DEPENDENCY' => { '<DUT>_compile_lintra' => 'Success', 
                          '<DUT>_compile_lintra_svtb' => 'Complete',},
        'CMD_TYPE'   => 'simregress',
        "CMDS"       => "<MODEL_ROOT>/reglist/template/level0_template_tests_lintra.list $triage_args",
    },
    {
        'DUTS'       => 'default',
        'NAME'       => '<DUT>_spyglass_regression',
        'DEPENDENCY' => { '<DUT>_compile_spyglass' => 'Success', },
        'CMD_TYPE'   => 'simregress',
        "CMDS"       => "<MODEL_ROOT>/reglist/template/level0_template_tests_spyglass.list $triage_args",
    },
];

##########################
# Post Command Section
if(defined($ENV{GK_PROJECT_CONFIG_DIR})) {
    $Models{post_cmds} =    [                
        {
            'NAME'         => 'netbatch_job_dump',
            'CMDS'         => $ENV{'GK_PROJECT_CONFIG_DIR'}. '/dump_turnin_nb_info.pl', 
            'EVENTS'       => ['FILTER', 'TURNIN','RELEASE'],
            'GATING'       => 0,
        },

    ];
} else {
    undef $Models{job_post_cmds};
}
